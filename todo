const express = require("express");
const path = require("path");

const { open } = require("sqlite");
const sqlite3 = require("sqlite3");
const bcrypt=require("bcrypt");
const app = express();
app.use(express.json());

const dbPath = path.join(__dirname, "goodreads.db");

let db = null;

const initializeDBAndServer = async () => {
  try {
    db = await open({
      filename: dbPath,
      driver: sqlite3.Database,
    });
    app.listen(3000, () => {
      console.log("Server Running at http://localhost:3000/");
    });
  } catch (e) {
    console.log(`DB Error: ${e.message}`);
    process.exit(1);
  }
};

initializeDBAndServer();

app.post("/register",async(request,response)=>{
  let {username,name,password,gender,location}=request.body;
  const hashedPassword=await bcrypt.hash(password,10,function(err,hash){
    if(err){
      console.log(err);
    }else{
      console.log(hash);
    }
  });
  const selecteUserQuery=`
  SELECT 
  * FROM user WHERE username='${username}';
  `;
  const dbUser=await db.get(selecteUserQuery);
  if(dbUser===undefined){
    const createUserQuery=`
    INSERT INTO user (username,name,passwors,gender,location)
    VALUES('${username}','${name}','${hashedPassword}','${gender}','${location}');
    `;
      if(password.length<5){
        response.status(400);
        response.send("Password is too short");
      }
      else{
        let dbResponse=await d.run(createUserQuery);
        response.status(200);
        response.send("User created Successfully");
      }
   }else{
    response.status(400);
    responsesend("User already exists");
   }
});

module.exports=app;
